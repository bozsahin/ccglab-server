> (lg "wish" :make t)


=========================== p r e p a r i n g ===============================

Project name: wish
  Input : wish.lisptokens 
  Output: wish.ded 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create wish.lisptokens by running 'tokens wish' sed script offline.
======================= l o a d i n g =======================================

Project [wish] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : wish.ccg $
    Its token form   : wish.lisptokens $
  Deduction grammar  : wish.ded $ (derived from wish.lisptokens)
  Induction grammar  : wish.ind #
  Supervision source : wish.sup ^
  Model-specific code: wish.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from wish.ded
  *LEX-RULES-TABLE*  : set from wish.ded
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================
T
> (p '(i wish to derive and you hope to get  "a good analysis"))

T
> (ders)


Derivation 1
--------------
LEX   (I) := S/(S\NP)
        : (LAM P (P I))
LEX   (WISH) := (S\NP)/^VP
        : (LAM P (LAM X ((WISH (P X)) X)))
LEX   (TO) := VP/^IV
        : (LAM P P)
LEX   (DERIVE) := IV/^NP
        : (LAM X (LAM Y ((DERIVE X) Y)))
>B    (TO)(DERIVE) := VP/^NP
        : (LAM X ((LAM P P) ((LAM X (LAM Y ((DERIVE X) Y))) X)))
>B    (WISH)(TO DERIVE) := (S\NP)/^NP
        : (LAM X
           ((LAM P (LAM X ((WISH (P X)) X)))
            ((LAM X ((LAM P P) ((LAM X (LAM Y ((DERIVE X) Y))) X))) X)))
>B    (I)(WISH TO DERIVE) := S/^NP
        : (LAM X
           ((LAM P (P I))
            ((LAM X
              ((LAM P (LAM X ((WISH (P X)) X)))
               ((LAM X ((LAM P P) ((LAM X (LAM Y ((DERIVE X) Y))) X))) X)))
             X)))
LEX   (AND) := (@X\*@X)/*@X
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
LEX   (YOU) := S/(S\NP)
        : (LAM P (P YOU))
LEX   (HOPE) := (S\NP)/^VP
        : (LAM P (LAM X ((HOPE (P X)) X)))
LEX   (TO) := VP/^IV
        : (LAM P P)
LEX   (GET) := IV/^NP
        : (LAM X (LAM Y ((GET X) Y)))
>B    (TO)(GET) := VP/^NP
        : (LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X)))
>B    (HOPE)(TO GET) := (S\NP)/^NP
        : (LAM X
           ((LAM P (LAM X ((HOPE (P X)) X)))
            ((LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X))) X)))
>B    (YOU)(HOPE TO GET) := S/^NP
        : (LAM X
           ((LAM P (P YOU))
            ((LAM X
              ((LAM P (LAM X ((HOPE (P X)) X)))
               ((LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X))) X)))
             X)))
>     (AND)(YOU HOPE TO GET) := (S/^NP)\*(S/^NP)
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
           (LAM X
            ((LAM P (P YOU))
             ((LAM X
               ((LAM P (LAM X ((HOPE (P X)) X)))
                ((LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X))) X)))
              X))))
<     (I WISH TO DERIVE)(AND YOU HOPE TO GET) := S/^NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X
             ((LAM P (P YOU))
              ((LAM X
                ((LAM P (LAM X ((HOPE (P X)) X)))
                 ((LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X))) X)))
               X))))
           (LAM X
            ((LAM P (P I))
             ((LAM X
               ((LAM P (LAM X ((WISH (P X)) X)))
                ((LAM X ((LAM P P) ((LAM X (LAM Y ((DERIVE X) Y))) X))) X)))
              X))))
LEX   (a good analysis) := S\(S/NP)
        : (LAM P (P (GOOD ANALYSIS)))
<     (I WISH TO DERIVE AND YOU HOPE TO GET)("a good analysis") := S
        : ((LAM P (P (GOOD ANALYSIS)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X
              ((LAM P (P YOU))
               ((LAM X
                 ((LAM P (LAM X ((HOPE (P X)) X)))
                  ((LAM X ((LAM P P) ((LAM X (LAM Y ((GET X) Y))) X))) X)))
                X))))
            (LAM X
             ((LAM P (P I))
              ((LAM X
                ((LAM P (LAM X ((WISH (P X)) X)))
                 ((LAM X ((LAM P P) ((LAM X (LAM Y ((DERIVE X) Y))) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((AND ((HOPE ((GET (GOOD ANALYSIS)) YOU)) YOU))
     ((WISH ((DERIVE (GOOD ANALYSIS)) I)) I)) =
    (AND (HOPE (GET (GOOD ANALYSIS) YOU) YOU)
     (WISH (DERIVE (GOOD ANALYSIS) I) I))

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
> (dribble)
